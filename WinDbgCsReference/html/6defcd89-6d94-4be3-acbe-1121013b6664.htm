<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Using C# scripts</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Wiki" /><meta name="Microsoft.Help.Id" content="6defcd89-6d94-4be3-acbe-1121013b6664" /><meta name="Description" content="Copy flavor you need from Official build location (or build it yourself from source codehttps://github.com/southpolenator/WinDbgCs) to your local hard drive." /><meta name="Microsoft.Help.ContentType" content="Samples" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">C# scripting documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6defcd89-6d94-4be3-acbe-1121013b6664.htm" title="C# scripting documentation" tocid="roottoc">C# scripting documentation</a></div><div class="toclevel1 current" data-toclevel="1"><a data-tochassubtree="false" href="6defcd89-6d94-4be3-acbe-1121013b6664.htm" title="Using C# scripts" tocid="6defcd89-6d94-4be3-acbe-1121013b6664">Using C# scripts</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="b76ffd2d-4d7f-4b4f-9b3b-277603e78dd6.htm" title="Version History" tocid="b76ffd2d-4d7f-4b4f-9b3b-277603e78dd6">Version History</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="383acee6-2b68-0b11-0fd6-afeeb334da52.htm" title="CsDebugScript" tocid="383acee6-2b68-0b11-0fd6-afeeb334da52">CsDebugScript</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="aabf7752-4bb2-3bcc-523d-3d174489ea72.htm" title="CsDebugScript.CLR" tocid="aabf7752-4bb2-3bcc-523d-3d174489ea72">CsDebugScript.CLR</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="52318b29-dc28-e2e2-24c3-97c4b1d210b1.htm" title="CsDebugScript.CodeGen" tocid="52318b29-dc28-e2e2-24c3-97c4b1d210b1">CsDebugScript.CodeGen</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="7b845f64-ed05-1ec9-66b5-91a53cdf96a2.htm" title="CsDebugScript.CommonUserTypes.NativeTypes.std" tocid="7b845f64-ed05-1ec9-66b5-91a53cdf96a2">CsDebugScript.CommonUserTypes.NativeTypes.std</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ca6eb5f7-5a24-8386-dc30-74b4e00ee29a.htm" title="CsDebugScript.Engine" tocid="ca6eb5f7-5a24-8386-dc30-74b4e00ee29a">CsDebugScript.Engine</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="143dc984-0322-0a93-1318-cb772851a7ee.htm" title="CsDebugScript.Engine.Native" tocid="143dc984-0322-0a93-1318-cb772851a7ee">CsDebugScript.Engine.Native</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="c6a0017b-ebdb-3961-34e0-9078db01e813.htm" title="CsDebugScript.Engine.Utility" tocid="c6a0017b-ebdb-3961-34e0-9078db01e813">CsDebugScript.Engine.Utility</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn">Using C# scripts</td></tr></table><span class="introStyle"></span><div class="introduction"><p>This topic contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#Installing_CSharp_scripts_and_using_it_in_WinDbg">Installing C# debug scripts and using it in WinDbg</a></li><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#Installing_CSharp_scripts_support">Installing C# debug scripts support</a></li><li class="outlineSectionEntry"><a href="#Loading_CsScripts_plugin_into_WinDbg">Loading CsDebugScript plugin into WinDbg</a></li><li class="outlineSectionEntry"><a href="#Executing_CSharp_script">Executing C# script</a></li><li class="outlineSectionEntry"><a href="#Entering_interactive_mode">Entering interactive mode</a></li><li class="outlineSectionEntry"><a href="#Entering_UI_interactive_mode">Entering UI interactive mode</a></li></ul><li class="outlineSectionEntry"><a href="#Tutorial_scripts">Tutorial scripts</a></li><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#Enumerating_processes_being_debugged">Enumerating processes being debugged</a></li><li class="outlineSectionEntry"><a href="#Enumeratung_all_threads_in_current_process_being_debugged">Enumerating all threads in current process being debugged</a></li><li class="outlineSectionEntry"><a href="#Enumerating_all_modules_in_current_process_being_debugged">Enumerating all modules in current process being debugged</a></li><li class="outlineSectionEntry"><a href="#List_all_functions_on_a_call_stack_of_the_current_thread">List all functions on a call stack of the current thread</a></li><li class="outlineSectionEntry"><a href="#Accessing_local_variables">Accessing local variables</a></li><li class="outlineSectionEntry"><a href="#Accessing_global_variables">Accessing global variables</a></li><li class="outlineSectionEntry"><a href="#Accessing_variable_fields">Accessing variable fields</a></li><li class="outlineSectionEntry"><a href="#Getting_variable_type">Getting variable type</a></li><li class="outlineSectionEntry"><a href="#Casting_variable_to_built_in_type">Casting variable to built-in type</a></li><li class="outlineSectionEntry"><a href="#Casting_variable_to_user_type">Casting variable to user type</a></li><li class="outlineSectionEntry"><a href="#Casting_variable_to_code_type_given_by_string">Casting variable to code type given by string</a></li><li class="outlineSectionEntry"><a href="#Getting_array_element_of_variable_array">Getting array element of variable array</a></li></ul><li class="outlineSectionEntry"><a href="#Advanced_scripting">Advanced scripting</a></li><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#How_to_use_using_in_scripts">How to use using in scripts</a></li><li class="outlineSectionEntry"><a href="#Importing_files_into_scripts">Importing files into scripts</a></li><li class="outlineSectionEntry"><a href="#Referencing_assemblies_in_scripts">Referencing assemblies in scripts</a></li><li class="outlineSectionEntry"><a href="#I_would_like_to_automate_dump_processing_with_CSharp">I would like to automate dump processing with C#</a></li></ul><li class="outlineSectionEntry"><a href="#Exporting_User_types_from_PDB_file">Exporting User types from PDB file</a></li><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#Sample_usage">Sample usage</a></li><li class="outlineSectionEntry"><a href="#Using_XML_export_configuration_file">Using XML export configuration file</a></li><li class="outlineSectionEntry"><a href="#How_transformations_work">How transformations work</a></li></ul><li class="outlineSectionEntry"><a href="#seeAlsoSection">See Also</a></li></ul></div><div class="collapsibleAreaRegion" id="Installing_CSharp_scripts_and_using_it_in_WinDbg"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Installing C# debug scripts and using it in WinDbg</span></div><div id="ID1RBSection" class="collapsibleSection"><h4 class="subHeading" id="Installing_CSharp_scripts_support">Installing C# debug scripts support</h4><div class="subsection"><p>
              Copy flavor you need from Official build location (or build it yourself from
              <a href="https://github.com/southpolenator/WinDbgCs" target="_blank">source code</a>) to your local hard drive.
            </p><p>
              Since builds are linked with Visual Studio 2015, you need to install
              <a href="http://www.microsoft.com/en-us/download/details.aspx?id=48145" target="_blank">Visual C++ Redistributable for Visual Studio 2015</a>.
            </p><p><q>(note: you can use only release build if you don't have Visual Studio 2015 installed).</q></p></div><h4 class="subHeading" id="Loading_CsScripts_plugin_into_WinDbg">Loading CsDebugScript plugin into WinDbg</h4><div class="subsection"><p>
              Use WinDbg
              <a href="https://msdn.microsoft.com/en-us/library/windows/hardware/ff563964%28v=vs.85%29.aspx" target="_blank">.load</a>
              command and point it to address of CsDebugScript.WinDbg.dll. For example:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAADAEAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAADAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAADAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">.load C:\debuggers\winext\CsDebugScript.WinDbg.dll</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAADAEAAA");</script></div><h4 class="subHeading" id="Executing_CSharp_script">Executing C# script</h4><div class="subsection"><p>
              Use <span class="code">!execute</span> command exported from CsDebugScript.WinDbg extension:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAEACAEAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAEACAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAEACAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">!execute path_to_csx_script [optional arguments given to the script]</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAEACAEAAA");</script><p>
              For example:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACACAEAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACACAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACACAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">!execute C:\Scripts\myscript.csx</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACACAEAAA");</script><p>
              In case you have one more extension that exports <span class="code">!execute</span> command, you must specify extension at the beginning:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAACAEAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAACAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAACAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">!CsDebugScript.execute c:\Scripts\myscript.csx</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAACAEAAA");</script></div><h4 class="subHeading" id="Entering_interactive_mode">Entering interactive mode</h4><div class="subsection"><p>
              Use <span class="code">!interactive</span> command exported from CsDebugScript extension:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACABAEAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACABAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACABAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">!CsDebugScript.interactive</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACABAEAAA");</script><p>
              Interactive mode can execute both WinDbg commands and C# expressions. C# expression saves the state and must end with semicolon (;). WinDbg commands start with #dbg. For example you can enter following commands and not get an error:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABAEAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> a = Threads[<span class="highlight-number">0</span>];
<span class="highlight-preprocessor">#dbg</span> kn
writeln(<span class="highlight-literal">"{0}:{1}"</span>, a.Id, a.SystemId);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABAEAAA");</script></div><h4 class="subHeading" id="Entering_UI_interactive_mode">Entering UI interactive mode</h4><div class="subsection"><p>
              Use <span class="code">!openui</span> command exported from CsDebugScript extension:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABAAAEAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EABAAAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABAAAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">!CsDebugScript.openui</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABAAAEAAA");</script><p>
              UI interactive mode is more powerful than regular interactive mode as it provides C# editor, completion window, XML documentation, etc.
            </p></div></div><div class="collapsibleAreaRegion" id="Tutorial_scripts"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Tutorial scripts</span></div><div id="ID2RBSection" class="collapsibleSection"><h4 class="subHeading" id="Enumerating_processes_being_debugged">Enumerating processes being debugged</h4><div class="subsection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACALADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACALADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACALADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACALADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">foreach</span> (Process process <span class="highlight-keyword">in</span> Process.All)
    writeln(<span class="highlight-literal">"{0}:{1} {2}"</span>, process.Id, process.SystemId, process.ExecutableName);
Console.Writeln(<span class="highlight-literal">"Current process: {0}"</span>, Process.Current.SystemId);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACALADAAA");</script>
            References:
            <ul><li><a href="f5336cce-64ce-f691-459f-b790b7313f2d.htm">Process</a></li><li><a href="0ed2c1b9-1855-fb0e-1b21-c3f8ca810ba6.htm">writeln(String, <span id="LST8CADC04E_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8CADC04E_0?cpp=array&lt;");</script>Object<span id="LST8CADC04E_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8CADC04E_1?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></li></ul></div><h4 class="subHeading" id="Enumeratung_all_threads_in_current_process_being_debugged">Enumerating all threads in current process being debugged</h4><div class="subsection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACAKADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACAKADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACAKADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACAKADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">foreach</span> (Thread thread <span class="highlight-keyword">in</span> Thread.All)
    writeln(<span class="highlight-literal">"{0}:{1}"</span>, thread.Id, thread.SystemId);
writeln(<span class="highlight-literal">"Current thread: {0}:{1}"</span>, Thread.Current.Id, Thread.Current.SystemId);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACAKADAAA");</script>
            References:
            <ul><li><a href="7239feb2-8220-dcb6-061e-6e31f78883ed.htm">Thread</a></li><li><a href="1892e3dd-d1f1-d8d6-075d-8055a647d8ad.htm">Process.Threads</a></li><li><a href="0ed2c1b9-1855-fb0e-1b21-c3f8ca810ba6.htm">writeln(String, <span id="LST8CADC04E_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8CADC04E_2?cpp=array&lt;");</script>Object<span id="LST8CADC04E_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8CADC04E_3?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></li></ul></div><h4 class="subHeading" id="Enumerating_all_modules_in_current_process_being_debugged">Enumerating all modules in current process being debugged</h4><div class="subsection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAEAJADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAEAJADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAEAJADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAEAJADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">foreach</span> (Module module <span class="highlight-keyword">in</span> Module.All)
    writeln(<span class="highlight-literal">"0x{0:X} {1}"</span>, module.Offset, module.Name);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAEAJADAAA");</script><p>
              You can also access modules for a given process:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACAJADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACAJADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACAJADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACAJADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">foreach</span> (Module module <span class="highlight-keyword">in</span> Process.Current.Modules)
    writeln(<span class="highlight-literal">"{0}"</span>, module.ImageName);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACAJADAAA");</script>
            References:
            <ul><li><a href="cc8bd9bb-a8ed-fc94-299d-c201fc23ab80.htm">Module</a></li><li><a href="196108f3-ff4b-db74-1511-3a0e00f3843e.htm">Process.Modules</a></li><li><a href="0ed2c1b9-1855-fb0e-1b21-c3f8ca810ba6.htm">writeln(String, <span id="LST8CADC04E_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8CADC04E_4?cpp=array&lt;");</script>Object<span id="LST8CADC04E_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8CADC04E_5?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></li></ul></div><h4 class="subHeading" id="List_all_functions_on_a_call_stack_of_the_current_thread">List all functions on a call stack of the current thread</h4><div class="subsection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACAIADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACAIADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACAIADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACAIADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">foreach</span> (StackFrame frame <span class="highlight-keyword">in</span> Thread.Current.StackTrace.Frames)
    writeln(frame.FunctionName);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACAIADAAA");</script>
            References:
            <ul><li><a href="7239feb2-8220-dcb6-061e-6e31f78883ed.htm">Thread</a></li><li><a href="9b4cf73e-df47-6847-8a14-eea78081ce3d.htm">StackTrace</a></li><li><a href="967e8f0c-94e5-db61-8c84-ea8d50d5eee8.htm">StackFrame</a></li><li><a href="fd8fe1c1-54ac-3925-89d9-8c2dbc8d60e3.htm">writeln(Object)</a></li></ul></div><h4 class="subHeading" id="Accessing_local_variables">Accessing local variables</h4><div class="subsection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACAHADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACAHADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACAHADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACAHADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">VariableCollection locals = Thread.Current.StackTrace.Frames[<span class="highlight-number">0</span>].Locals;
<span class="highlight-keyword">foreach</span> (Variable l <span class="highlight-keyword">in</span> locals)
    writeln(l.GetName());
<span class="highlight-keyword">dynamic</span> myVar = locals[<span class="highlight-literal">"myVar"</span>];
writeln(myVar);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACAHADAAA");</script>
            References:
            <ul><li><a href="7239feb2-8220-dcb6-061e-6e31f78883ed.htm">Thread</a></li><li><a href="9b4cf73e-df47-6847-8a14-eea78081ce3d.htm">StackTrace</a></li><li><a href="967e8f0c-94e5-db61-8c84-ea8d50d5eee8.htm">StackFrame</a></li><li><a href="fdded29c-7ef3-293e-cc0e-42e9943a304d.htm">VariableCollection</a></li><li><a href="c5952422-6e4a-2ef1-bf03-f3149a5752e4.htm">Variable</a></li><li><a href="fd8fe1c1-54ac-3925-89d9-8c2dbc8d60e3.htm">writeln(Object)</a></li></ul></div><h4 class="subHeading" id="Accessing_global_variables">Accessing global variables</h4><div class="subsection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAEAGADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAEAGADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAEAGADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAEAGADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">dynamic</span> globalVariable = Process.Current.GetGlobal(<span class="highlight-literal">"mymodule!globalVariable"</span>);
<span class="highlight-keyword">dynamic</span> staticClassVariable = Process.Current.GetGlobal(<span class="highlight-literal">"mymodule!Class::staticVariable"</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAEAGADAAA");</script><p>
              You can also access through <a href="7baea61e-729b-a99f-1170-e9679e1f3c8d.htm">Modules</a>:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACAGADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACAGADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACAGADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACAGADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">dynamic</span> globalVariable = Modules.mymodule.globalVariable;
<span class="highlight-keyword">dynamic</span> staticClassVariable = Modules.mymodule.GetVariable(<span class="highlight-literal">"Class::staticVariable"</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACAGADAAA");</script>
            References:
            <ul><li><a href="f5336cce-64ce-f691-459f-b790b7313f2d.htm">Process</a></li><li><a href="c5952422-6e4a-2ef1-bf03-f3149a5752e4.htm">Variable</a></li><li><a href="7baea61e-729b-a99f-1170-e9679e1f3c8d.htm">Modules</a></li></ul></div><h4 class="subHeading" id="Accessing_variable_fields">Accessing variable fields</h4><div class="subsection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAEAFADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAEAFADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAEAFADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAEAFADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Variable variable = Process.Current.GetGlobal(<span class="highlight-literal">"mymodule!globalVariable"</span>);
Variable field = variable.GetField(<span class="highlight-literal">"field"</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAEAFADAAA");</script><p>
              Or if you use dynamic:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACAFADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACAFADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACAFADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACAFADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">dynamic</span> globalVariable = Modules.mymodule.globalVariable;
<span class="highlight-keyword">dynamic</span> field = variable.field;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACAFADAAA");</script>
            References:
            <ul><li><a href="f5336cce-64ce-f691-459f-b790b7313f2d.htm">Process</a></li><li><a href="c5952422-6e4a-2ef1-bf03-f3149a5752e4.htm">Variable</a></li><li><a href="7baea61e-729b-a99f-1170-e9679e1f3c8d.htm">Modules</a></li></ul></div><h4 class="subHeading" id="Getting_variable_type">Getting variable type</h4><div class="subsection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACAEADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACAEADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACAEADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACAEADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">CodeType type = myVariable.GetCodeType();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACAEADAAA");</script>
            References:
            <ul><li><a href="ad2522f6-1de4-0b55-dea3-2190b0ee1e37.htm">CodeType</a></li><li><a href="c5952422-6e4a-2ef1-bf03-f3149a5752e4.htm">Variable</a></li></ul></div><h4 class="subHeading" id="Casting_variable_to_built_in_type">Casting variable to built-in type</h4><div class="subsection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACADADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACADADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACADADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACADADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Variable variable = Process.Current.GetGlobal(<span class="highlight-literal">"mymodule!globalVariable"</span>);
<span class="highlight-keyword">int</span> intValue = (<span class="highlight-keyword">int</span>)variable;
<span class="highlight-keyword">ulong</span> ulongValue = (<span class="highlight-keyword">ulong</span>)variable;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACADADAAA");</script>
            References:
            <ul><li><a href="f5336cce-64ce-f691-459f-b790b7313f2d.htm">Process</a></li><li><a href="c5952422-6e4a-2ef1-bf03-f3149a5752e4.htm">Variable</a></li></ul></div><h4 class="subHeading" id="Casting_variable_to_user_type">Casting variable to user type</h4><div class="subsection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACACADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACACADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACACADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACACADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Variable variable = Process.Current.GetGlobal(<span class="highlight-literal">"mymodule!globalVariable"</span>);
std.wstring s = variable.CastAs&lt;std.wstring&gt;();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACACADAAA");</script>
            References:
            <ul><li><a href="f5336cce-64ce-f691-459f-b790b7313f2d.htm">Process</a></li><li><a href="c5952422-6e4a-2ef1-bf03-f3149a5752e4.htm">Variable</a></li></ul></div><h4 class="subHeading" id="Casting_variable_to_code_type_given_by_string">Casting variable to code type given by string</h4><div class="subsection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACABADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACABADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACABADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACABADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Variable p = Process.Current.GetGlobal(<span class="highlight-literal">"mymodule!voidPointerVariable"</span>);
writeln(p); <span class="highlight-comment">// This will print address of void* pointer</span>
Variable s = p.CastAs(<span class="highlight-literal">"wchar_t*"</span>);
writeln(s); <span class="highlight-comment">// This will print string value pointed by s</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACABADAAA");</script>
            References:
            <ul><li><a href="f5336cce-64ce-f691-459f-b790b7313f2d.htm">Process</a></li><li><a href="c5952422-6e4a-2ef1-bf03-f3149a5752e4.htm">Variable</a></li></ul></div><h4 class="subHeading" id="Getting_array_element_of_variable_array">Getting array element of variable array</h4><div class="subsection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAEAAADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAEAAADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAEAAADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAEAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Variable a = Process.Current.GetGlobal(<span class="highlight-literal">"mymodule!intArrayVariable"</span>);
<span class="highlight-keyword">int</span> i = (<span class="highlight-keyword">int</span>)a.GetArrayElement(<span class="highlight-number">0</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAEAAADAAA");</script><p>
              Or if you use dynamic:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACAAADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACAAADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACAAADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">dynamic</span> a = Modules.mymodule.intArrayVariable;
<span class="highlight-keyword">int</span> i = (<span class="highlight-keyword">int</span>)a[<span class="highlight-number">0</span>];</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACAAADAAA");</script>
            References:
            <ul><li><a href="f5336cce-64ce-f691-459f-b790b7313f2d.htm">Process</a></li><li><a href="c5952422-6e4a-2ef1-bf03-f3149a5752e4.htm">Variable</a></li><li><a href="7baea61e-729b-a99f-1170-e9679e1f3c8d.htm">Modules</a></li></ul></div></div><div class="collapsibleAreaRegion" id="Advanced_scripting"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Advanced scripting</span></div><div id="ID3RBSection" class="collapsibleSection"><p>Previous examples show that scripts don't have namespace and class definition inside. That part is automatically generated by the script compiler.</p><h4 class="subHeading" id="How_to_use_using_in_scripts">How to use using in scripts</h4><div class="subsection"><p>
              Using C# statement should be located at the top of the script. It is supposed to be used as in any other C# file but its scope is for entire script file:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAADACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAADACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAADACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAADACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> System.Linq;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAADACAAA");</script></div><h4 class="subHeading" id="Importing_files_into_scripts">Importing files into scripts</h4><div class="subsection"><p>
              Having multiple script files is preferable as script files should share common code. For example, having this helper script file:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACACACAAA_tab1" class="codeSnippetContainerTabSingle">helper.csx</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACACACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACACACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACACACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;

<span class="highlight-keyword">void</span> HelpMe(<span class="highlight-keyword">string</span> text)
{
    writeln(text);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACACACAAA");</script><p>
              we can have sample script that is referencing that helper file:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAACACAAA_tab1" class="codeSnippetContainerTabSingle">script.csx</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAACACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAACACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAACACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-preprocessor">#load</span> <span class="highlight-literal">"helper.csx"</span>

Console.Error.WriteLine(<span class="highlight-literal">"This is sample error"</span>);
HelpMe(<span class="highlight-literal">"It works!"</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAACACAAA");</script></div><h4 class="subHeading" id="Referencing_assemblies_in_scripts">Referencing assemblies in scripts</h4><div class="subsection"><p>
              You now have huge collection of common code and compiling scripts is not that fast any more, you should create .NET library (dll) and just reference it from the script:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-preprocessor">#r</span> <span class="highlight-literal">"CsDebugScript.CommonUserTypes.dll"</span>
<span class="highlight-keyword">using</span> std = CsDebugScript.CommonUserTypes.NativeTypes.std;

Variable variable = Process.Current.GetGlobal(<span class="highlight-literal">"mymodule!globalVariable"</span>);
std.wstring s = variable.CastAs&lt;std.wstring&gt;();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABACAAA");</script></div><h4 class="subHeading" id="I_would_like_to_automate_dump_processing_with_CSharp">I would like to automate dump processing with C#</h4><div class="subsection"><p>
              Please take a look at
              <a href="https://github.com/southpolenator/WinDbgCs/blob/master/Tests/CsDebugScript.Engine.Test/Program.cs" target="_blank">CsDebugScript.Engine.Test</a>.
              It shows how to:
            </p><ul><li>Open a dump</li><li>Execute some C# code against it</li><li>Execute C# script</li></ul></div></div><div class="collapsibleAreaRegion" id="Exporting_User_types_from_PDB_file"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exporting User types from PDB file</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
          You have a lot of classes in your project and you would like to have typed access in scripts or be safe when field gets renamed. Use tool CsDebugScript.CodeGen.
        </p><h4 class="subHeading" id="Sample_usage">Sample usage</h4><div class="subsection"><p>
              This command will export only MyType from the PDB. Built-in types will also be exported.
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACACABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACACABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACACABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">CsDebugScript.CodeGen -p myPdb.pdb -t MyType</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACACABAAA");</script><p>
              This command will export two user types and if one of them has field that points to another, it will be correctly exported.
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAACABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAACABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAACABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">CsDebugScript.CodeGen -p myPdb.pdb -t MyType,MySecondType</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAACABAAA");</script></div><h4 class="subHeading" id="Using_XML_export_configuration_file">Using XML export configuration file</h4><div class="subsection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAGABABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAGABABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAGABABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">CsDebugScript.CodeGen -x export.xml</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAGABABAAA");</script><p>
              Where export.xml looks like:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAEABABAAA_tab1" class="codeSnippetContainerTabSingle">export.xml</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAEABABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAEABABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAEABABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">XmlConfig</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Types</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Type</span> <span class="highlight-xml-attribute-name">Name</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"MyTestClass"</span> <span class="highlight-xml-bracket">/&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Types</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Modules</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Module</span> <span class="highlight-xml-attribute-name">Namespace</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"MyModule"</span> <span class="highlight-xml-attribute-name">PdbPath</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"myPdb.pdb"</span><span class="highlight-xml-bracket">/&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Modules</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Transformations</span><span class="highlight-xml-bracket">&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Transformation</span> <span class="highlight-xml-attribute-name">OriginalType</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"std::basic_string&amp;lt;wchar_t,${char_traits},${allocator}&amp;gt;"</span> <span class="highlight-xml-attribute-name">NewType</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"CsDebugScript.CommonUserTypes.NativeTypes.std.wstring"</span> <span class="highlight-xml-attribute-name">Constructor</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"${new}"</span> <span class="highlight-xml-bracket">/&gt;</span>
    <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Transformation</span> <span class="highlight-xml-attribute-name">OriginalType</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"std::vector&amp;lt;${T},${allocator}&amp;gt;"</span> <span class="highlight-xml-attribute-name">NewType</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"CsDebugScript.CommonUserTypes.NativeTypes.std.vector&amp;lt;${T}&amp;gt;"</span> <span class="highlight-xml-attribute-name">Constructor</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"${new}"</span> <span class="highlight-xml-bracket">/&gt;</span>
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Transformations</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">XmlConfig</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAEABABAAA");</script><p>
              And if you have class MyTestClass in cpp code:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACABABAAA_tab1" class="codeSnippetContainerTabSingle">C++</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACABABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACABABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACABABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">struct</span> MyTestClass
{
    <span class="highlight-keyword">std::vector</span>&lt;std::wstring&gt; strings;
};</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACABABAAA");</script><p>
              You will get exported code that looks like this (note: for readability not all generated code is shown):
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> MyTestClass
{
    <span class="highlight-keyword">private</span> UserMember&lt;std.vector&lt;std.wstring&gt;&gt; _strings;

    <span class="highlight-keyword">public</span> MyTestClass(Variable variable)
    {
        _strings = UserMember.Create(() =&gt; <span class="highlight-keyword">new</span> std.vector&lt;std.wstring&gt;(variable.GetField(<span class="highlight-literal">"strings"</span>));
    }

    <span class="highlight-keyword">public</span> std.vector&lt;std.wstring&gt; strings { <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> _strings.Value; } }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABABAAA");</script></div><h4 class="subHeading" id="How_transformations_work">How transformations work</h4><div class="subsection"><p>Transformation has three properties that defines it:</p><dl><dt>OriginalType</dt><dd><p>consists of original type and template arguments that are being extracted</p></dd><dt>NewType</dt><dd><p>transformation string that generates the new type</p></dd><dt>Constructor</dt><dd><p>
                  transformation string that generates constructor (body of the lambda that is used with <span class="code">UserMember.Create</span> function)
                </p></dd></dl><p>
              Template arguments are extracted from OriginalType string and can be used inside transformation strings. Here is the list of predefined variables:
            </p><dl><dt>${field}</dt><dd><p>
                  Maps to: <span class="code">variable.GetField("&lt;field_name&gt;")</span></p></dd><dt>${fieldOffset}</dt><dd><p>
                  Maps to: <span class="code">variable.GetFieldOffset("&lt;field_name&gt;")</span></p></dd><dt>${newType}</dt><dd><p>It maps to output of NewType trasformation string</p></dd><dt>${className}</dt><dd><p>Replaced with UserType that is currently being exported</p></dd><dt>${new}</dt><dd><p><span class="code">new ${newType}(${field})</span></p></dd><dt>${newOffset}</dt><dd><p><span class="code">new ${newType}(${field}, ${fieldOffset})</span></p></dd><dt>${cast}</dt><dd><p><span class="code">(${newType})${field}</span></p></dd></dl></div></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="b76ffd2d-4d7f-4b4f-9b3b-277603e78dd6.htm">Version History</a></div></div></div></div><div id="pageFooter" class="pageFooter" /></body></html>